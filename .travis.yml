language: python

stages:
- name: image
  if: branch = main AND type != pull_request
- name: multiarch
  if: branch = main AND type != pull_request
- name: deploy-to-dev
  if: branch = main AND type != pull_request
- name: new-git-release
  if: tag is present

before_script:
  - export DOCKER_REGISTRY=${DOCKER_REGISTRY:-quay.io}
  - export IMAGE_NAME=${IMAGE_NAME:-/st4sd/official-base/st4sd-datastore}
  - export IMAGE_BASE_URL="${DOCKER_REGISTRY}${IMAGE_NAME}"
  - export RUNTIMECORE_IMAGE_NAME=${ROOT_IMAGE_NAME:-/st4sd/official-base/st4sd-runtime-core}
  - export RUNTIMECORE_URL="${DOCKER_REGISTRY}${RUNTIMECORE_IMAGE_NAME}"

jobs:
  include:
    - stage: image
      services:
        - docker
      env:
        - BUILD_PYTHON_VERSION=37
      script:
        - docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_TOKEN}" "${DOCKER_REGISTRY}"
        - docker build --pull -t ${IMAGE_BASE_URL}:py${BUILD_PYTHON_VERSION}-latest-`arch` -f Dockerfile .
          --build-arg base_image=${RUNTIMECORE_URL}:py${BUILD_PYTHON_VERSION}-latest-`arch`
        - docker push ${IMAGE_BASE_URL}:py${BUILD_PYTHON_VERSION}-latest-`arch`
      os: linux
      python: "3.7"

    - stage: image
      services:
        - docker
      env:
        - BUILD_PYTHON_VERSION=310
      script:
        - docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_TOKEN}" "${DOCKER_REGISTRY}"
        - docker build --pull -t ${IMAGE_BASE_URL}:py${BUILD_PYTHON_VERSION}-latest-`arch` -f Dockerfile .
          --build-arg base_image=${RUNTIMECORE_URL}:py${BUILD_PYTHON_VERSION}-latest-`arch`
        - docker push ${IMAGE_BASE_URL}:py${BUILD_PYTHON_VERSION}-latest-`arch`
      os: linux
      python: "3.10"
    # VV: Disable PPC64LE builds because we do not have a PPC64LE build for the base layer (st4sd-runtime-core)
    #- stage: image
    #  services:
    #    - docker
    #  script:
    #  - docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_TOKEN}" "${DOCKER_REGISTRY}"
    #  - docker build --pull -t ${IMAGE_BASE_URL}:latest-`arch` -f Dockerfile .
    #    --build-arg base_image=${RUNTIMECORE_URL}
    #  - docker push ${IMAGE_BASE_URL}:latest-`arch`
    #  os: linux-ppc64le
    - stage: multiarch
      os: linux
      python: "3.7"
      env:
      - BUILD_PYTHON_VERSION=37
      script:
        - export SRC_TAG_X8664="py${BUILD_PYTHON_VERSION}-latest-x86_64"
        - export DST_TAG_X8664="py${BUILD_PYTHON_VERSION}-x86_64"
        # VV: Disable ppc64le builds for now
        #- export SRC_TAG_PPC64LE="latest-ppc64le"
        #- export DST_TAG_PPC64LE="ppc64le"
        - export LABEL="latest"
        - ./deploy/build_multiarch.sh

    - stage: multiarch
      os: linux
      python: "3.10"
      env:
      - BUILD_PYTHON_VERSION=310
      script:
        - export SRC_TAG_X8664="py${BUILD_PYTHON_VERSION}-latest-x86_64"
        - export DST_TAG_X8664="py${BUILD_PYTHON_VERSION}-x86_64"
        # VV: Disable ppc64le builds for now
        #- export SRC_TAG_PPC64LE="latest-ppc64le"
        #- export DST_TAG_PPC64LE="ppc64le"
        - export LABEL="py${BUILD_PYTHON_VERSION}-latest"
        - ./deploy/build_multiarch.sh

    - stage: deploy-to-dev
      os: linux
      env:
        DEPLOY_TO="VE-5446-dev"
      script:
        - ./deploy/redeploy_deploymentconfig.sh
          "${VE_5446_DEV_PROJECT}" "${VE_5446_DEV_LOGIN_URL}" "${VE_5446_DEV_LOGIN_TOKEN}"
    - stage: new-git-release
      os: linux
      services: docker
      script:
      - docker run --rm -it
          --env DOCKER_REGISTRY --env DOCKER_TOKEN --env DOCKER_USERNAME
          -v `pwd`/deploy:/scripts -w /scripts --entrypoint /scripts/skopeo_copy.sh quay.io/skopeo/stable
          ${IMAGE_BASE_URL}:latest ${IMAGE_BASE_URL}:release-candidate
